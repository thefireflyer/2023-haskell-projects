-------------------------------------------------------------------------------
--- /////////////////////////////////////////////////////////////////////// ---
-------------------------------------------------------------------------------

module DMS.Logging where

-------------------------------------------------------------------------------

-- import Data.Time
-- import GHC.IO (IO (IO))
-- import System.Environment (getArgs)
-- import System.Random (StdGen, randomIO)
-- import System.Random.Stateful (mkStdGen)

-------------------------------------------------------------------------------
--- /////////////////////////////////////////////////////////////////////// ---
-------------------------------------------------------------------------------

logPath :: String
logPath = "/home/casey/0/.meta/logs.txt"

-------------------------------------------------------------------------------
--- /////////////////////////////////////////////////////////////////////// ---
-------------------------------------------------------------------------------

-- data LL a
--   = Comment UTCTime a
--   | Warning UTCTime a
--   | Error UTCTime a
--   | Attr UTCTime String a
--   deriving (Show)

-------------------------------------------------------------------------------

-- instance Show (LL a) where
--   show (Comment msg time) = "C [" ++ show time ++ "] " ++ show msg
--   show (Warning msg time) = "W [" ++ show time ++ "] " ++ show msg
--   show (Error msg time) = "E [" ++ show time ++ "] " ++ show msg

-------------------------------------------------------------------------------

-- lc :: forall a. (Show a) => a -> IO ()
-- lc msg = do
--   time <- getCurrentTime
--   commit (Comment time msg)

-------------------------------------------------------------------------------

-- lcc :: forall a. (Show a) => String -> a -> IO ()
-- lcc atr val = do
--   time <- getCurrentTime
--   commit (Attr time atr val)

-------------------------------------------------------------------------------

-- commit :: forall a. (Show a) => LL a -> IO ()
-- commit msg = do
--   print msg
--   appendFile logPath (show msg ++ "\n")

-------------------------------------------------------------------------------
--- /////////////////////////////////////////////////////////////////////// ---
-------------------------------------------------------------------------------
